<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cancionesporusuario', 'doctrine');

/**
 * BaseCancionesporusuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $logintitular
 * @property integer $idcancionusuario
 * @property Usuarios $Usuarios
 * @property Canciones $Canciones
 * @property Doctrine_Collection $Compartidas
 * @property Doctrine_Collection $Compartidas_2
 * 
 * @method string              getLogintitular()     Returns the current record's "logintitular" value
 * @method integer             getIdcancionusuario() Returns the current record's "idcancionusuario" value
 * @method Usuarios            getUsuarios()         Returns the current record's "Usuarios" value
 * @method Canciones           getCanciones()        Returns the current record's "Canciones" value
 * @method Doctrine_Collection getCompartidas()      Returns the current record's "Compartidas" collection
 * @method Doctrine_Collection getCompartidas2()     Returns the current record's "Compartidas_2" collection
 * @method Cancionesporusuario setLogintitular()     Sets the current record's "logintitular" value
 * @method Cancionesporusuario setIdcancionusuario() Sets the current record's "idcancionusuario" value
 * @method Cancionesporusuario setUsuarios()         Sets the current record's "Usuarios" value
 * @method Cancionesporusuario setCanciones()        Sets the current record's "Canciones" value
 * @method Cancionesporusuario setCompartidas()      Sets the current record's "Compartidas" collection
 * @method Cancionesporusuario setCompartidas2()     Sets the current record's "Compartidas_2" collection
 * 
 * @package    MusicStore
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCancionesporusuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cancionesporusuario');
        $this->hasColumn('logintitular', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('idcancionusuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usuarios', array(
             'local' => 'logintitular',
             'foreign' => 'login'));

        $this->hasOne('Canciones', array(
             'local' => 'idcancionusuario',
             'foreign' => 'idcanciones'));

        $this->hasMany('Compartidas', array(
             'local' => 'logintitular',
             'foreign' => 'loginremitente'));

        $this->hasMany('Compartidas as Compartidas_2', array(
             'local' => 'idcancionusuario',
             'foreign' => 'idcancioncompartida'));
    }
}