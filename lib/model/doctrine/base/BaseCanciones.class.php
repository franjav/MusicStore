<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Canciones', 'doctrine');

/**
 * BaseCanciones
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idcanciones
 * @property string $nombrecancion
 * @property string $interprete
 * @property string $album
 * @property string $genero
 * @property string $ruta
 * @property Doctrine_Collection $Cancionesporlista
 * @property Doctrine_Collection $Cancionesporusuario
 * 
 * @method integer             getIdcanciones()         Returns the current record's "idcanciones" value
 * @method string              getNombrecancion()       Returns the current record's "nombrecancion" value
 * @method string              getInterprete()          Returns the current record's "interprete" value
 * @method string              getAlbum()               Returns the current record's "album" value
 * @method string              getGenero()              Returns the current record's "genero" value
 * @method string              getRuta()                Returns the current record's "ruta" value
 * @method Doctrine_Collection getCancionesporlista()   Returns the current record's "Cancionesporlista" collection
 * @method Doctrine_Collection getCancionesporusuario() Returns the current record's "Cancionesporusuario" collection
 * @method Canciones           setIdcanciones()         Sets the current record's "idcanciones" value
 * @method Canciones           setNombrecancion()       Sets the current record's "nombrecancion" value
 * @method Canciones           setInterprete()          Sets the current record's "interprete" value
 * @method Canciones           setAlbum()               Sets the current record's "album" value
 * @method Canciones           setGenero()              Sets the current record's "genero" value
 * @method Canciones           setRuta()                Sets the current record's "ruta" value
 * @method Canciones           setCancionesporlista()   Sets the current record's "Cancionesporlista" collection
 * @method Canciones           setCancionesporusuario() Sets the current record's "Cancionesporusuario" collection
 * 
 * @package    MusicStore
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCanciones extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('canciones');
        $this->hasColumn('idcanciones', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombrecancion', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('interprete', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('album', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('genero', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('ruta', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Cancionesporlista', array(
             'local' => 'idcanciones',
             'foreign' => 'idcancionlista'));

        $this->hasMany('Cancionesporusuario', array(
             'local' => 'idcanciones',
             'foreign' => 'idcancionusuario'));
    }
}